// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  name        String?
  posts       Post[]
  attendances Attendance[]
  hostedEvents Event[]     @relation("HostedEvents")
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  Int
  author    User    @relation(fields: [authorId], references: [id])
}

model Event {
  id           String       @id @default(cuid())
  title        String
  date         DateTime
  endDate      DateTime?
  location     String
  description  String
  price        Int
  capacity     Int?
  isOnline     Boolean
  eventStatus  String @default("PENDING")
  url          String?
  imageUrl     String?
  hostId       Int
  host         User         @relation("HostedEvents", fields: [hostId], references: [id])
  attendances  Attendance[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Attendance {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
  rsvp      String
  createdAt DateTime @default(now())

  @@unique([userId, eventId])
}
